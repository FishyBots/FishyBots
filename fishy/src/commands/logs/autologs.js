const Discord = require('discord.js');
const path = require('path');
const db = require('better-sqlite3')(path.join(__dirname, "../../db/database.db"));

module.exports = {
    name: 'autologs',
    aliases: ['autolog'],
    category: 6,
    description: 'Cr√©e automatiquement les salons de logs',
    
    run: async (client, message, args) => {
        try {
            // Cr√©er la table si elle n'existe pas
            db.prepare(`
                CREATE TABLE IF NOT EXISTS logs (
                    guildId TEXT PRIMARY KEY,
                    messageLogChannel TEXT,
                    voiceLogChannel TEXT,
                    commandLogChannel TEXT,
                    modLogChannel TEXT,
                    serverLogChannel TEXT,
                    roleLogChannel TEXT,
                    boostLogChannel TEXT,
                    fluxLogChannel TEXT,
                    messageLogsEnabled INTEGER DEFAULT 1,
                    voiceLogsEnabled INTEGER DEFAULT 1,
                    commandLogsEnabled INTEGER DEFAULT 1,
                    modLogsEnabled INTEGER DEFAULT 1,
                    serverLogsEnabled INTEGER DEFAULT 1,
                    roleLogsEnabled INTEGER DEFAULT 1,
                    boostLogsEnabled INTEGER DEFAULT 1,
                    fluxLogsEnabled INTEGER DEFAULT 1
                )
            `).run();

            // V√©rifier et ajouter les colonnes manquantes
            const columns = [
                { name: 'serverLogChannel', type: 'TEXT' },
                { name: 'roleLogChannel', type: 'TEXT' },
                { name: 'boostLogChannel', type: 'TEXT' },
                { name: 'fluxLogChannel', type: 'TEXT' },
                { name: 'serverLogsEnabled', type: 'INTEGER', default: 1 },
                { name: 'roleLogsEnabled', type: 'INTEGER', default: 1 },
                { name: 'boostLogsEnabled', type: 'INTEGER', default: 1 },
                { name: 'fluxLogsEnabled', type: 'INTEGER', default: 1 }
            ];

            for (const column of columns) {
                try {
                    db.prepare(`ALTER TABLE logs ADD COLUMN ${column.name} ${column.type}${column.default ? ` DEFAULT ${column.default}` : ''}`).run();
                } catch (error) {
                    // Ignorer l'erreur si la colonne existe d√©j√†
                }
            }

            // Cr√©ation de la cat√©gorie Logs
            const logsCategory = await message.guild.channels.create({
                name: 'üìã Logs Serveur',
                type: Discord.ChannelType.GuildCategory,
                permissionOverwrites: [
                    {
                        id: message.guild.id,
                        deny: [Discord.PermissionFlagsBits.ViewChannel]
                    },
                    {
                        id: message.guild.members.me.id,
                        allow: [Discord.PermissionFlagsBits.ViewChannel]
                    }
                ]
            });

            // Cr√©ation des salons de logs
            const messageLogChannel = await message.guild.channels.create({
                name: 'üìÅ„Éªmessage-logs',
                type: Discord.ChannelType.GuildText,
                parent: logsCategory.id,
                topic: 'Logs des messages (modification, suppression)'
            });

            const voiceLogChannel = await message.guild.channels.create({
                name: 'üìÅ„Éªvoice-logs',
                type: Discord.ChannelType.GuildText,
                parent: logsCategory.id,
                topic: 'Logs des actions vocales (connexion, d√©connexion, d√©placement)'
            });

            const commandLogChannel = await message.guild.channels.create({
                name: 'üìÅ„Éªcommands-logs',
                type: Discord.ChannelType.GuildText,
                parent: logsCategory.id,
                topic: 'Logs des commandes utilis√©es'
            });

            const modLogChannel = await message.guild.channels.create({
                name: 'üìÅ„Éªmod-logs',
                type: Discord.ChannelType.GuildText,
                parent: logsCategory.id,
                topic: 'Logs des actions de mod√©ration'
            });

            const serverLogChannel = await message.guild.channels.create({
                name: 'üìÅ„Éªserver-logs',
                type: Discord.ChannelType.GuildText,
                parent: logsCategory.id,
                topic: 'Logs des modifications du serveur'
            });

            const roleLogChannel = await message.guild.channels.create({
                name: 'üìÅ„Éªrole-logs',
                type: Discord.ChannelType.GuildText,
                parent: logsCategory.id,
                topic: 'Logs des actions li√©es aux r√¥les'
            });

            const boostLogChannel = await message.guild.channels.create({
                name: 'üìÅ„Éªboost-logs',
                type: Discord.ChannelType.GuildText,
                parent: logsCategory.id,
                topic: 'Logs des boosts du serveur'
            });

            const fluxLogChannel = await message.guild.channels.create({
                name: 'üìÅ„Éªflux-logs',
                type: Discord.ChannelType.GuildText,
                parent: logsCategory.id,
                topic: 'Logs des arriv√©es et d√©parts'
            });

            // Mise √† jour de la base de donn√©es
            db.prepare(`
                INSERT OR REPLACE INTO logs (
                    guildId,
                    messageLogChannel,
                    voiceLogChannel,
                    commandLogChannel,
                    modLogChannel,
                    serverLogChannel,
                    roleLogChannel,
                    boostLogChannel,
                    fluxLogChannel,
                    messageLogsEnabled,
                    voiceLogsEnabled,
                    commandLogsEnabled,
                    modLogsEnabled,
                    serverLogsEnabled,
                    roleLogsEnabled,
                    boostLogsEnabled,
                    fluxLogsEnabled
                ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, 1, 1, 1, 1, 1, 1, 1, 1)
            `).run(
                message.guild.id,
                messageLogChannel.id,
                voiceLogChannel.id,
                commandLogChannel.id,
                modLogChannel.id,
                serverLogChannel.id,
                roleLogChannel.id,
                boostLogChannel.id,
                fluxLogChannel.id
            );

            const embed = new Discord.EmbedBuilder()
                .setColor(client.color)
                .setTitle('‚úÖ Configuration des logs termin√©e')
                .setDescription(`Les salons de logs ont √©t√© cr√©√©s avec succ√®s :\n
                üìù Messages : ${messageLogChannel}
                üé§ Vocal : ${voiceLogChannel}
                ‚å®Ô∏è Commandes : ${commandLogChannel}
                üõ°Ô∏è Mod√©ration : ${modLogChannel}
                üè† Serveur : ${serverLogChannel}
                üë• R√¥les : ${roleLogChannel}
                üåü Boosts : ${boostLogChannel}
                üìä Flux : ${fluxLogChannel}
                
                Tous les logs sont maintenant activ√©s et configur√©s !`)
                .setFooter({ 
                    text: `Configur√© par ${message.author.tag}`, 
                    iconURL: message.author.displayAvatarURL({ dynamic: true }) 
                })
                .setTimestamp();

            message.channel.send({ embeds: [embed] });

        } catch (error) {
            console.error(error);
            message.channel.send("‚ùå Une erreur est survenue lors de la cr√©ation des salons de logs.");
        }
    }
}
